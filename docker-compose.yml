# docker-compose.yml

version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    env_file:
      - ./backend/.env  # Usa il file .env del backend
    ports:
      - "5000:5000"  # Espone la porta del backend
    depends_on:
      - mongo  # Assicura che MongoDB venga avviato prima del backend
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:80"  # Espone la porta del frontend (servito da Nginx)
    depends_on:
      - backend  # Assicura che il backend sia avviato prima del frontend
    networks:
      - app-network

  mongo:
    image: mongo:6.0  # Utilizza l'immagine MongoDB 6.0
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: geriatric  # Specifica il database iniziale
    volumes:
      - mongo-data:/data/db  # Monta un volume persistente per i dati
    ports:
      - "27017:27017"  # Espone MongoDB sulla porta predefinita
    networks:
      - app-network

volumes:
  mongo-data:  # Volume persistente per MongoDB

networks:
  app-network:
    driver: bridge  # Rete Docker per consentire ai container di comunicare tra loro
